//tp notes
//setup
var i2c=new I2C();
//var i2c=I2C1;
i2c.setup({scl:D7, sda:D6, bitrate:100000});

digitalPulse(D10,1,[5,50]);

for (let i = 0; i < 0x80; i++) {
  try { I2C1.readFrom(i, 1); console.log(i); } catch (e) {}
}



enaon, [14.08.21 07:57]
var i2c=I2C1;
i2c.setup({scl:D7, sda:D6, bitrate:100000});

enaon, [14.08.21 07:57]
to setup i2c

enaon, [14.08.21 07:58]
and then do a reset, and right after that, do a scan, like so:

enaon, [14.08.21 07:58]
digitalPulse(D13,1,[5,50]);

for (let i = 0; i < 0x80; i++) {
  try { I2C1.readFrom(i, 1); console.log(i); } catch (e) {}
}


//interupt monitor
lala=setWatch(function(s){
		i2c.writeTo(0x15,0);
		var tp=i2c.readFrom(0x15,7);
		print("touch816 :",tp);
},D28,{repeat:true, edge:"rising"});

read=function(){
	//read all non 0 registers
	i2c.writeTo(0x15,0);
	var reg=i2c.readFrom(0x15,255);
	var i=0;
	while (i<=255) {
		if (reg[i]!=0) console.log(i+"="+reg[i]);
		i++;
	}
}

//check version
drv_Touch_Read(0xA7, &chip_id, 1); //Value cst816s: 0xB4 cst716: 0x20
i2c.writeTo(0x15,0xA7)  //a7=167
i2c.readFrom(0x15,1)
B5== 816s // b4=180
20== 716  // 20=32 


//check revision
drv_Touch_Read(0xA9, &g_tp_version, 1); //Each firmware update, the version number is incremented by 1 
i2c.writeTo(0x15,0xA9)  //a7=169
i2c.readFrom(0x15,1)

//Set report rate, pull interrupt time interval
data[0] = 0x02; //Unit 10ms, setting time = data[0]*10ms 
drv_Touch_Write(0xEE, data, 1); //The default reporting rate is 100HZ, with an interrupt in 10ms,
i2c.writeTo(0x15,0xEE,0x10)  //

..
//set mode
i2c.writeTo(0x15,0xFA,0x60)  //Pull an interrupt every 10ms or so when touching TP. Report coordinates from time to time
i2c.writeTo(0x15,0xFA,0x11)  //Pull an interrupt after the gesture is generated.
i2c.writeTo(0x15,0xFB,0x71)  //Set to report point + gesture mode

//auto low power
drv_Touch_Write(0xFE, data, 1); // The default is 0, enable automatic entry into low power mode //fe=254
//auto reset
drv_Touch_Write(0xFD, data, 1); // Automatically reset after pressing for x seconds //fd=253
//auto reset
drv_Touch_Write(0xFC, data, 1); // When there is a touch within x seconds but there is no valid gesture, it will automatically reset //fc=252


i2c.writeTo(0x15,166,10)  //test




//read all non 0 registers
i2c.writeTo(0x15,0);
var reg=i2c.readFrom(0x15,255);
var i=0;
while (i<=254) {
  if (reg[i]!=0) console.log(i+"="+reg[i]);
  i++;
}

136=10
166=1
167=32
168=108
169=5


i2c.writeTo(0x15,165,10)  //test




original 816
48=48
64=64
65=19
66=111
67=22
68=135
69=18
70=46
71=18
72=143
73=17
74=223
75=17
76=240
77=18
78=58
79=18
80=87
81=23
82=212
83=19
84=118
96=96
112=2
116=8
128=96
167=180
169=1
177=199
179=210
234=3
235=100
237=10
238=1
239=6
244=1
245=35
246=3
247=7
248=50
249=2
250=17
251=5
252=10

816s setup as 816
128=30
136=10
166=1
167=32
168=128
169=3

816s setup as 716
136=10
166=1
167=32
168=108
169=5

716
136=10
166=1
167=180
169=2



816
new Uint8Array([0, 5, 0, 0, 110, 0, 139, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 15, 109, 19, 52, 14, 36, 15, 40, 14, 26, 14, 116, 14, 131, 14, 159, 18, 200, 15, 191, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 96, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15, 0, 12, 0, 19, 0, 10, 0, 12, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 96, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 180, 0, 1, 0, 0, 0, 0, 0, 0, 0, 181, 0, 226, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 100, 0, 10, 1, 6, 1, 240, 1, 254, 1, 35, 3, 7, 50, 2, 17, 5, 10, 0, 0])
=undefined
816s rock

new Uint8Array([0, 4, 0, 0, 163, 0, 81, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 24, 6, 22, 96, 18, 174, 19, 53, 18, 78, 18, 73, 16, 204, 17, 223, 16, 83, 16, 173, 15, 190, 15, 95, 0, 0, 0, 0, 0, 0, 0, 96, 0, 0, 0, 0, 0, 2, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 96, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 180, 22, 4, 0, 0, 0, 0, 0, 0, 0, 196, 0, 205, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 100, 0, 10, 1, 6, 1, 214, 1, 212, 1, 40, 5, 11, 60, 5,   17, 5, 10, 0, 0])
=undefined